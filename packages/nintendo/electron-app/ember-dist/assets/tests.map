{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","picasa/tests/helpers/ember-power-select.js","picasa/tests/integration/pods/components/folder-list/component-test.js","picasa/tests/integration/pods/components/image-list/component-test.js","picasa/tests/integration/pods/components/image-property/component-test.js","picasa/tests/integration/pods/components/import-photos-dialog/component-test.js","picasa/tests/integration/pods/components/path-tree/component-test.js","picasa/tests/integration/pods/components/progress-bar/component-test.js","picasa/tests/integration/pods/components/settings/component-test.js","picasa/tests/integration/pods/components/title-bar/component-test.js","picasa/tests/test-helper.js","picasa/tests/unit/mixins/persistence-test.js","picasa/tests/unit/mixins/preference-test.js","picasa/tests/unit/pods/electron-api/service-test.js","picasa/tests/unit/pods/folder-scan/service-test.js","picasa/tests/unit/pods/index/route-test.js","picasa/tests/unit/pods/localization/initializer-test-test.js","picasa/tests/unit/pods/splash/route-test.js","picasa/tests/unit/pods/trip/route-test.js","picasa/tests/unit/services/fetch-cache-test.js","picasa/tests/unit/services/file-watcher-test.js","picasa/tests/unit/services/image-scale-test.js","picasa/tests/unit/services/persistence-test.js","picasa/tests/unit/services/photo-import-test.js","picasa/tests/unit/services/preference-manager-test.js","picasa/tests/unit/services/window-menu-test.js","picasa/tests/unit/utils/context-menu-test.js","picasa/tests/unit/utils/data-normalizer-test.js","picasa/tests/unit/utils/folder-reader-test.js","picasa/tests/unit/utils/fs-watch-test.js","picasa/tests/unit/utils/logger-test.js","picasa/tests/unit/utils/platform-test.js","picasa/tests/unit/utils/thumbnail-cache-test.js","picasa/tests/unit/utils/window-menu-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"picasa/tests/helpers/ember-power-select\", [\"exports\", \"ember-power-select/test-support/helpers\"], function (_exports, _helpers) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.default = deprecatedRegisterHelpers;\n  _exports.selectChoose = _exports.touchTrigger = _exports.nativeTouch = _exports.clickTrigger = _exports.typeInSearch = _exports.triggerKeydown = _exports.nativeMouseUp = _exports.nativeMouseDown = _exports.findContains = void 0;\n\n  function deprecateHelper(fn, name) {\n    return function (...args) {\n      (true && !(false) && Ember.deprecate(`DEPRECATED \\`import { ${name} } from '../../tests/helpers/ember-power-select';\\` is deprecated. Please, replace it with \\`import { ${name} } from 'ember-power-select/test-support/helpers';\\``, false, {\n        until: '1.11.0',\n        id: `ember-power-select-test-support-${name}`\n      }));\n      return fn(...args);\n    };\n  }\n\n  let findContains = deprecateHelper(_helpers.findContains, 'findContains');\n  _exports.findContains = findContains;\n  let nativeMouseDown = deprecateHelper(_helpers.nativeMouseDown, 'nativeMouseDown');\n  _exports.nativeMouseDown = nativeMouseDown;\n  let nativeMouseUp = deprecateHelper(_helpers.nativeMouseUp, 'nativeMouseUp');\n  _exports.nativeMouseUp = nativeMouseUp;\n  let triggerKeydown = deprecateHelper(_helpers.triggerKeydown, 'triggerKeydown');\n  _exports.triggerKeydown = triggerKeydown;\n  let typeInSearch = deprecateHelper(_helpers.typeInSearch, 'typeInSearch');\n  _exports.typeInSearch = typeInSearch;\n  let clickTrigger = deprecateHelper(_helpers.clickTrigger, 'clickTrigger');\n  _exports.clickTrigger = clickTrigger;\n  let nativeTouch = deprecateHelper(_helpers.nativeTouch, 'nativeTouch');\n  _exports.nativeTouch = nativeTouch;\n  let touchTrigger = deprecateHelper(_helpers.touchTrigger, 'touchTrigger');\n  _exports.touchTrigger = touchTrigger;\n  let selectChoose = deprecateHelper(_helpers.selectChoose, 'selectChoose');\n  _exports.selectChoose = selectChoose;\n\n  function deprecatedRegisterHelpers() {\n    (true && !(false) && Ember.deprecate(\"DEPRECATED `import registerPowerSelectHelpers from '../../tests/helpers/ember-power-select';` is deprecated. Please, replace it with `import registerPowerSelectHelpers from 'ember-power-select/test-support/helpers';`\", false, {\n      until: '1.11.0',\n      id: 'ember-power-select-test-support-register-helpers'\n    }));\n    return (0, _helpers.default)();\n  }\n});","define(\"picasa/tests/integration/pods/components/folder-list/component-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | folder-list', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        {{folder-list}}\n      */\n      {\"id\":\"5w9oPeeF\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[34,0]]],\\\"hasEval\\\":false,\\\"upvars\\\":[\\\"folder-list\\\"]}\",\"meta\":{}}));\n      assert.dom(this.element).hasText(''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            {{#folder-list}}\n              template block text\n            {{/folder-list}}\n          \n      */\n      {\"id\":\"zouM8JTa\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n\\\"],[6,[37,0],null,null,[[\\\"default\\\"],[{\\\"statements\\\":[[2,\\\"        template block text\\\\n\\\"]],\\\"parameters\\\":[]}]]],[2,\\\"    \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[\\\"folder-list\\\"]}\",\"meta\":{}}));\n      assert.dom(this.element).hasText('template block text');\n    });\n  });\n});","define(\"picasa/tests/integration/pods/components/image-list/component-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | image list', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        {{image-list}}\n      */\n      {\"id\":\"pqh2satd\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[34,0]]],\\\"hasEval\\\":false,\\\"upvars\\\":[\\\"image-list\\\"]}\",\"meta\":{}}));\n      assert.dom('*').hasText(''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            {{#image-list}}\n              template block text\n            {{/image-list}}\n          \n      */\n      {\"id\":\"k2zp4fBf\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n\\\"],[6,[37,0],null,null,[[\\\"default\\\"],[{\\\"statements\\\":[[2,\\\"        template block text\\\\n\\\"]],\\\"parameters\\\":[]}]]],[2,\\\"    \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[\\\"image-list\\\"]}\",\"meta\":{}}));\n      assert.dom('*').hasText('template block text');\n    });\n  });\n});","define(\"picasa/tests/integration/pods/components/image-property/component-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | image-property', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        {{image-property}}\n      */\n      {\"id\":\"h20UyfFl\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[34,0]]],\\\"hasEval\\\":false,\\\"upvars\\\":[\\\"image-property\\\"]}\",\"meta\":{}}));\n      assert.dom(this.element).hasText(''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            {{#image-property}}\n              template block text\n            {{/image-property}}\n          \n      */\n      {\"id\":\"g1yLoDeu\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n\\\"],[6,[37,0],null,null,[[\\\"default\\\"],[{\\\"statements\\\":[[2,\\\"        template block text\\\\n\\\"]],\\\"parameters\\\":[]}]]],[2,\\\"    \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[\\\"image-property\\\"]}\",\"meta\":{}}));\n      assert.dom(this.element).hasText('template block text');\n    });\n  });\n});","define(\"picasa/tests/integration/pods/components/import-photos-dialog/component-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | import-photos', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        {{import-photos-dialog}}\n      */\n      {\"id\":\"AfrR9W32\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[34,0]]],\\\"hasEval\\\":false,\\\"upvars\\\":[\\\"import-photos-dialog\\\"]}\",\"meta\":{}}));\n      assert.dom(this.element).hasText(''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            {{#import-photos}}\n              template block text\n            {{/import-photos}}\n          \n      */\n      {\"id\":\"h0VT978D\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n\\\"],[6,[37,0],null,null,[[\\\"default\\\"],[{\\\"statements\\\":[[2,\\\"        template block text\\\\n\\\"]],\\\"parameters\\\":[]}]]],[2,\\\"    \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[\\\"import-photos\\\"]}\",\"meta\":{}}));\n      assert.dom(this.element).hasText('template block text');\n    });\n  });\n});","define(\"picasa/tests/integration/pods/components/path-tree/component-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | path tree', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.on('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        {{path-tree}}\n      */\n      {\"id\":\"5TIzV/Xc\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[34,0]]],\\\"hasEval\\\":false,\\\"upvars\\\":[\\\"path-tree\\\"]}\",\"meta\":{}}));\n      assert.dom('*').hasText(''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            {{#path-tree}}\n              template block text\n            {{/path-tree}}\n          \n      */\n      {\"id\":\"y2UusgGz\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n\\\"],[6,[37,0],null,null,[[\\\"default\\\"],[{\\\"statements\\\":[[2,\\\"        template block text\\\\n\\\"]],\\\"parameters\\\":[]}]]],[2,\\\"    \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[\\\"path-tree\\\"]}\",\"meta\":{}}));\n      assert.dom('*').hasText('template block text');\n    });\n  });\n});","define(\"picasa/tests/integration/pods/components/progress-bar/component-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | progress-bar', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <ProgressBar />\n      */\n      {\"id\":\"LO5FPUsh\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[8,\\\"progress-bar\\\",[],[[],[]],null]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\"meta\":{}}));\n      assert.equal(this.element.textContent.trim(), ''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            <ProgressBar>\n              template block text\n            </ProgressBar>\n          \n      */\n      {\"id\":\"eDuvf+G3\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n      \\\"],[8,\\\"progress-bar\\\",[],[[],[]],[[\\\"default\\\"],[{\\\"statements\\\":[[2,\\\"\\\\n        template block text\\\\n      \\\"]],\\\"parameters\\\":[]}]]],[2,\\\"\\\\n    \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\"meta\":{}}));\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define(\"picasa/tests/integration/pods/components/settings/component-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | settings', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        {{settings}}\n      */\n      {\"id\":\"XsrxOxfe\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[34,0]]],\\\"hasEval\\\":false,\\\"upvars\\\":[\\\"settings\\\"]}\",\"meta\":{}}));\n      assert.dom(this.element).hasText(''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            {{#settings}}\n              template block text\n            {{/settings}}\n          \n      */\n      {\"id\":\"/HqR02I8\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n\\\"],[6,[37,0],null,null,[[\\\"default\\\"],[{\\\"statements\\\":[[2,\\\"        template block text\\\\n\\\"]],\\\"parameters\\\":[]}]]],[2,\\\"    \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[\\\"settings\\\"]}\",\"meta\":{}}));\n      assert.dom(this.element).hasText('template block text');\n    });\n  });\n});","define(\"picasa/tests/integration/pods/components/title-bar/component-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | title-bar', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        {{title-bar}}\n      */\n      {\"id\":\"cWBrCYEl\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[34,0]]],\\\"hasEval\\\":false,\\\"upvars\\\":[\\\"title-bar\\\"]}\",\"meta\":{}}));\n      assert.dom(this.element).hasText(''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            {{#title-bar}}\n              template block text\n            {{/title-bar}}\n          \n      */\n      {\"id\":\"0TUoz70D\",\"block\":\"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n\\\"],[6,[37,0],null,null,[[\\\"default\\\"],[{\\\"statements\\\":[[2,\\\"        template block text\\\\n\\\"]],\\\"parameters\\\":[]}]]],[2,\\\"    \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[\\\"title-bar\\\"]}\",\"meta\":{}}));\n      assert.dom(this.element).hasText('template block text');\n    });\n  });\n});","define(\"picasa/tests/test-helper\", [\"picasa/app\", \"picasa/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"picasa/tests/unit/mixins/persistence-test\", [\"picasa/mixins/persistence\", \"qunit\"], function (_persistence, _qunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Mixin | persistence', function () {\n    // Replace this with your real tests.\n    (0, _qunit.test)('it works', function (assert) {\n      let PersistenceObject = Ember.Object.extend(_persistence.default);\n      let subject = PersistenceObject.create();\n      assert.ok(subject);\n    });\n  });\n});","define(\"picasa/tests/unit/mixins/preference-test\", [\"picasa/mixins/preference\", \"qunit\"], function (_preference, _qunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Mixin | preference', function () {\n    // Replace this with your real tests.\n    (0, _qunit.test)('it works', function (assert) {\n      let PreferenceObject = Ember.Object.extend(_preference.default);\n      let subject = PreferenceObject.create();\n      assert.ok(subject);\n    });\n  });\n});","define(\"picasa/tests/unit/pods/electron-api/service-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Service | electron-api', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let service = this.owner.lookup('service:electron-api');\n      assert.ok(service);\n    });\n  });\n});","define(\"picasa/tests/unit/pods/folder-scan/service-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Service | folder-scan', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let service = this.owner.lookup('service:folder-scan');\n      assert.ok(service);\n    });\n  });\n});","define(\"picasa/tests/unit/pods/index/route-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | index', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:index');\n      assert.ok(route);\n    });\n  });\n});","define(\"picasa/tests/unit/pods/localization/initializer-test-test\", [\"picasa/initializers/localization\", \"qunit\", \"ember-qunit\", \"picasa/tests/unit/helpers/destroy-app\"], function (_localization, _qunit, _emberQunit, _destroyApp) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Initializer | localization', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    hooks.beforeEach(function () {\n      this.TestApplication = Ember.Application.extend();\n      this.TestApplication.initializer({\n        name: 'initializer under test',\n        initialize: _localization.initialize\n      });\n      this.application = this.TestApplication.create({\n        autoboot: false\n      });\n    });\n    hooks.afterEach(function () {\n      (0, _destroyApp.default)(this.application);\n    }); // Replace this with your real tests.\n\n    (0, _qunit.test)('it works', async function (assert) {\n      await this.application.boot();\n      assert.ok(true);\n    });\n  });\n});","define(\"picasa/tests/unit/pods/splash/route-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | splash', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:splash');\n      assert.ok(route);\n    });\n  });\n});","define(\"picasa/tests/unit/pods/trip/route-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | trip', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:trip');\n      assert.ok(route);\n    });\n  });\n});","define(\"picasa/tests/unit/services/fetch-cache-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Service | fetch-cache', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let service = this.owner.lookup('service:fetch-cache');\n      assert.ok(service);\n    });\n  });\n});","define(\"picasa/tests/unit/services/file-watcher-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Service | file-watcher', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let service = this.owner.lookup('service:file-watcher');\n      assert.ok(service);\n    });\n  });\n});","define(\"picasa/tests/unit/services/image-scale-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Service | image-scale', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let service = this.owner.lookup('service:image-scale');\n      assert.ok(service);\n    });\n  });\n});","define(\"picasa/tests/unit/services/persistence-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Service | persistence', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let service = this.owner.lookup('service:persistence');\n      assert.ok(service);\n    });\n  });\n});","define(\"picasa/tests/unit/services/photo-import-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Service | photo-import', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let service = this.owner.lookup('service:photo-import');\n      assert.ok(service);\n    });\n  });\n});","define(\"picasa/tests/unit/services/preference-manager-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Service | persistence', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let service = this.owner.lookup('service:preference-manager');\n      assert.ok(service);\n    });\n  });\n});","define(\"picasa/tests/unit/services/window-menu-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Service | persistence', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let service = this.owner.lookup('service:window-menu');\n      assert.ok(service);\n    });\n  });\n});","define(\"picasa/tests/unit/utils/context-menu-test\", [\"picasa/utils/context-menu\", \"qunit\"], function (_contextMenu, _qunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Utility | context menu', function () {\n    // Replace this with your real tests.\n    (0, _qunit.test)('it works', function (assert) {\n      let result = (0, _contextMenu.default)();\n      assert.ok(result);\n    });\n  });\n});","define(\"picasa/tests/unit/utils/data-normalizer-test\", [\"picasa/utils/data-normalizer\", \"qunit\"], function (_dataNormalizer, _qunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Utility | data-normalizer', function ()\n  /*hooks*/\n  {\n    // Replace this with your real tests.\n    (0, _qunit.test)('it works', async function (assert) {\n      const root = \"/\";\n      const images = [\"a\", \"b\"];\n      let result = await (0, _dataNormalizer.normalizeImages)(root, images, true); // use promise then can be await.\n\n      assert.equal(result.length, 2);\n      assert.equal(result[0].root, root);\n      assert.equal(result[0].image, images[0]);\n      assert.equal(result[0].path, `${root}/${images[0]}`);\n    });\n  });\n});","define(\"picasa/tests/unit/utils/folder-reader-test\", [\"picasa/utils/folder-reader\", \"qunit\"], function (_folderReader, _qunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Utility | folder reader', function () {\n    // Replace this with your real tests.\n    (0, _qunit.test)('it works', function (assert) {\n      let result = (0, _folderReader.default)();\n      assert.ok(result);\n    });\n  });\n});","define(\"picasa/tests/unit/utils/fs-watch-test\", [\"picasa/utils/fs-watch\", \"qunit\"], function (_fsWatch, _qunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Utility | fs-watch', function ()\n  /*hooks*/\n  {\n    // Replace this with your real tests.\n    (0, _qunit.test)('it works', function (assert) {\n      let result = (0, _fsWatch.default)();\n      assert.ok(result);\n    });\n  });\n});","define(\"picasa/tests/unit/utils/logger-test\", [\"picasa/utils/logger\", \"qunit\"], function (_logger, _qunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Utility | logger', function ()\n  /*hooks*/\n  {\n    // Replace this with your real tests.\n    (0, _qunit.test)('it works', function (assert) {\n      let result = (0, _logger.default)();\n      assert.ok(result);\n    });\n  });\n});","define(\"picasa/tests/unit/utils/platform-test\", [\"picasa/utils/platform\", \"qunit\"], function (_platform, _qunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Utility | platform', function ()\n  /*hooks*/\n  {\n    // Replace this with your real tests.\n    (0, _qunit.test)('it works', function (assert) {\n      let result = (0, _platform.default)();\n      assert.ok(result);\n    });\n  });\n});","define(\"picasa/tests/unit/utils/thumbnail-cache-test\", [\"picasa/utils/thumbnail-cache\", \"qunit\"], function (_thumbnailCache, _qunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Utility | thumbnail-cache', function ()\n  /*hooks*/\n  {\n    // Replace this with your real tests.\n    (0, _qunit.test)('it works', function (assert) {\n      let result = (0, _thumbnailCache.default)();\n      assert.ok(result);\n    });\n  });\n});","define(\"picasa/tests/unit/utils/window-menu-test\", [\"picasa/utils/window-menu\", \"qunit\"], function (_windowMenu, _qunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Utility | window menu', function () {\n    // Replace this with your real tests.\n    (0, _qunit.test)('it works', function (assert) {\n      let result = (0, _windowMenu.default)();\n      assert.ok(result);\n    });\n  });\n});","define('picasa/config/environment', [], function() {\n  var prefix = 'picasa';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('picasa/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}